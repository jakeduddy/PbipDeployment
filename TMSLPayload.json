{
  "definition": {
    "Parts": [
      {
        "Payload": "eyAgICJ2ZXJzaW9uIjogIjEuMCIsICAgInNldHRpbmdzIjoge30gfQ==",
        "Path": "definition.pbidataset",
        "PayloadType": "InlineBase64"
      },
      {
        "Payload": "eyAgICJ2ZXJzaW9uIjogIjEuMS4wIiwgICAiZGlhZ3JhbXMiOiBbICAgICB7ICAgICAgICJvcmRpbmFsIjogMCwgICAgICAgInNjcm9sbFBvc2l0aW9uIjogeyAgICAgICAgICJ4IjogMCwgICAgICAgICAieSI6IDAgICAgICAgfSwgICAgICAgIm5vZGVzIjogWyAgICAgICAgIHsgICAgICAgICAgICJsb2NhdGlvbiI6IHsgICAgICAgICAgICAgIngiOiAyMDYsICAgICAgICAgICAgICJ5IjogMjAxICAgICAgICAgICB9LCAgICAgICAgICAgIm5vZGVJbmRleCI6ICJmYWN0IiwgICAgICAgICAgICJub2RlTGluZWFnZVRhZyI6ICI4ZTBlYTkzZS01OWE2LTQ0MjMtOWI2NS0wNTc1NzFjYjM3YmEiLCAgICAgICAgICAgInNpemUiOiB7ICAgICAgICAgICAgICJoZWlnaHQiOiAxNTIsICAgICAgICAgICAgICJ3aWR0aCI6IDIzNCAgICAgICAgICAgfSwgICAgICAgICAgICJ6SW5kZXgiOiAyICAgICAgICAgfSwgICAgICAgICB7ICAgICAgICAgICAibG9jYXRpb24iOiB7ICAgICAgICAgICAgICJ4IjogMCwgICAgICAgICAgICAgInkiOiAwICAgICAgICAgICB9LCAgICAgICAgICAgIm5vZGVJbmRleCI6ICJEaW0iLCAgICAgICAgICAgIm5vZGVMaW5lYWdlVGFnIjogIjVlMTU1MjlhLTllOGMtNDg1Ni1hZmJiLTAyNWNmYjNhMjI1OCIsICAgICAgICAgICAic2l6ZSI6IHsgICAgICAgICAgICAgImhlaWdodCI6IDEyOCwgICAgICAgICAgICAgIndpZHRoIjogMjM0ICAgICAgICAgICB9LCAgICAgICAgICAgInpJbmRleCI6IDEgICAgICAgICB9LCAgICAgICAgIHsgICAgICAgICAgICJsb2NhdGlvbiI6IHsgICAgICAgICAgICAgIngiOiA0OTAsICAgICAgICAgICAgICJ5IjogMTI0LjUgICAgICAgICAgIH0sICAgICAgICAgICAibm9kZUluZGV4IjogIl9NZWFzdXJlcyIsICAgICAgICAgICAibm9kZUxpbmVhZ2VUYWciOiAiYzM5YTliMGEtYjliZi00YWRlLWI3OTEtYjg4NWVlMTcxODQyIiwgICAgICAgICAgICJzaXplIjogeyAgICAgICAgICAgICAiaGVpZ2h0IjogMTA0LCAgICAgICAgICAgICAid2lkdGgiOiAyMzQgICAgICAgICAgIH0sICAgICAgICAgICAiekluZGV4IjogMCAgICAgICAgIH0gICAgICAgXSwgICAgICAgIm5hbWUiOiAiQWxsIHRhYmxlcyIsICAgICAgICJ6b29tVmFsdWUiOiAxMDAsICAgICAgICJwaW5LZXlGaWVsZHNUb1RvcCI6IGZhbHNlLCAgICAgICAic2hvd0V4dHJhSGVhZGVySW5mbyI6IGZhbHNlLCAgICAgICAiaGlkZUtleUZpZWxkc1doZW5Db2xsYXBzZWQiOiBmYWxzZSwgICAgICAgInRhYmxlc0xvY2tlZCI6IGZhbHNlICAgICB9ICAgXSwgICAic2VsZWN0ZWREaWFncmFtIjogIkFsbCB0YWJsZXMiLCAgICJkZWZhdWx0RGlhZ3JhbSI6ICJBbGwgdGFibGVzIiB9",
        "Path": "diagramLayout.json",
        "PayloadType": "InlineBase64"
      },
      {
        "Payload": "",
        "Path": "model.bim",
        "PayloadType": "InlineBase64"
      }
    ]
  },
  "displayName": "test",
  "type": "SemanticModel"
}
